runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
print("l")
getSymbols(input$symb, src = "google",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
# Source helpers ----
source("helpers.R")
# Load packages ----
library(shiny)
library(quantmod)
# Source helpers ----
source("helpers.R")
# User interface ----
ui <- fluidPage(
titlePanel("stockVis"),
sidebarLayout(
sidebarPanel(
helpText("Select a stock to examine.
Information will be collected from Google finance."),
textInput("symb", "Symbol", "SPY"),
dateRangeInput("dates",
"Date range",
start = "2013-01-01",
end = as.character(Sys.Date())),
br(),
br(),
checkboxInput("log", "Plot y axis on log scale",
value = FALSE),
checkboxInput("adjust",
"Adjust prices for inflation", value = FALSE)
),
mainPanel(plotOutput("plot"))
)
)
# Server logic
server <- function(input, output) {
dataInput <- reactive({
getSymbols(input$symb, src = "google",
from = input$dates[1],
to = input$dates[2],
auto.assign = FALSE)
})
output$plot <- renderPlot({
chartSeries(dataInput(), theme = chartTheme("white"),
type = "line", log.scale = input$log, TA = NULL)
})
}
# Run the app
shinyApp(ui, server)
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
install.packages('DT')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
getSymbols("FB")
chart_Series(FB)
chart_Series(FB["2017"])
chart_Series(FB["2017-08"])
chartSeries(YHOO, TA=NULL)
chartSeries(FB, TA=NULL)
addTA(OpCl(YHOO),col='blue', type='h')
addTA(OpCl(FB),col='blue', type='h')
addTA(Cl(FB),col='blue', type='h')
runApp('stock.R')
runApp('stock.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='stockviz',
token='BEE5B14C004180DB54076970D4019E98',
secret='<SECRET>')
rsconnect::setAccountInfo(name='stockviz',
token='BEE5B14C004180DB54076970D4019E98',
secret='0xkie1oaFTKER0ryBigaC6qvnFfFukSL8NM35j8L')
rsconnect::deployApp('Stock.R')
rsconnect::deployApp('/Desktop/code/R/App-2')
rsconnect::deployApp('/Users/jadedagher/Desktop/code/R/App-2
')
rsconnect::deployApp()
rsconnect::deployApp(stock.R)
rsconnect::deployApp("stock.R")
deployApp()
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
deployApp()
library(shiny); runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
getFX(USD/EUR)
getFX("USD/EUR")
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
head("USD/EUR")
head("USD/EUR")
head("USDEUR")
View(USDEUR)
View(USDEUR)
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
chart_Series(USDEUR)
chartSeries(USDEUR)
getFX(BTNEUR)
getFX("BTNEUR")
chartSeries(BTNEUR)
chartSeries("BTNEUR")
chartSeries(BTNEUR)
head("USD/EUR")
head("USDEUR")
head(USDEUR)
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
addVo()
chartSeries(BTCEUR)
chartSeries("BTCEUR")
chartSeries("BTC/EUR")
chartSeries(USDEUR)
addVo()
addBBands()
addMACD()
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
runApp('stock.R')
chartSeries(USDEUR)
addBBands()
runApp('stock.R')
addVo()
addVo(USDEUR)
addSMI()
addATR()
addADX()
addEMA()
runApp('stock.R')
install.packages(plotly)
install.packages("plotly")
library(dygraphs)
library(dygraphs)
library(plotly)
dygraph(USDEUR)
install.packages("dygraph")
plot_ly(USDEUR)
plot_ly("USDEUR")
runApp('stock.R')
runApp('stock.R')
last(USDEUR)
runApp('stock.R')
last(dataInput)
runApp('stock.R')
runApp('stock.R')
dataInput()
runApp('stock.R')
getQuote("NGH16.NYM", src="yahoo")
getQuote("NG1:COM", src="yahoo")
getQuote("W1:COM", src="yahoo")
getQuote("W1:COM", src="google")
getQuote("W1:COM")
addCCI(n = 20, maType="SMA", c=0.015)
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2016',
theme="white"
)
getSymbols("MA", from = "2007-01-01", to = "2016-10-23")
MA %>% class()
MA %>% str()
MA %>% head()
MA %>%
Ad() %>%
chartSeries()
MA %>%
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2016',
theme="white"
)
MA_log_returns <- MA %>%
Ad() %>%
dailyReturn(type = "log")
names(MA_log_returns) <- "MA.Log.Returns"
# Plot the log-returns
MA_log_returns %>%
ggplot(aes(x = MA.Log.Returns)) +
geom_histogram(bins = 100) +
geom_density() +
geom_rug(alpha = 0.5)
MA
chartSeries(TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2016',
theme="white"
)
chartSeries(MA,TA='addBBands();
addBBands(draw="p");
addVo();
addMACD()',
subset='2016',
theme="white"
)
runApp('stock.R')
runApp('stock.R')
getSymbol(AAPL)
getSymbol("AAPL")
View(FB)
library(quantmod)
getSymbol("AAPL")
getSymbol(AAPL, src="YAHOO")
getSymbols(AAPL)
View(USDEUR)
View(FB)
getSymbols("FB", src="google")
head(FB)
last(FB)
chart_Series(FB['2017'])
addBBands()
chart_Series(FB['2017'], TA=addBBands())
library(shiny); runApp('stock.R')
library(shiny); runApp('stock.R')
chart_Series(FB['2017']
)
head(FB)
library(shiny); runApp('stock.R')
install.packages("qmao")
library(shiny); runApp('stock.R')
library(quantmod)
chartSeries(FB)
chartSeries(FB['2017'])
chartSeries(FB['2017-09'])
chartSeries(FB['2017-05'])
chartSeries(FB['2017-05'],type="l")
addBBands()
chartSeries(FB['2017-01'],type="l")
addBBands()
addEMA()
chartSeries(FB['2017'],type="l")
addBBands()
addEMA()
FB.tail()
tail()
tail().help
tail().help()
help()
help("tail")
tail(FB)
